name: Deploy to EC2

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: sa-east-1                   # Região da AWS, e.g., us-west-1
  EC2_HOST: ${{ secrets.REMOTE_HOST }}           # Endereço IP ou domínio da instância EC2
  EC2_USER: admin                            # Usuário da instância EC2 (ajustado para Debian)
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} # Chave SSH privada para acesso à instância EC2

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest                     # GitHub Actions usará Ubuntu-latest, mas o deploy será no Debian
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ env.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Transfer files to EC2
      run: |
        scp -r -i ~/.ssh/id_rsa ./* ${{ env.EC2_USER }}@${{ env.EC2_HOST }}:/home/${{ env.EC2_USER }}/app

    - name: SSH into EC2 and run deployment script
      run: |
        ssh -i ~/.ssh/id_rsa ${{ env.EC2_USER }}@${{ env.EC2_HOST }} << 'EOF'
        cd /home/${{ env.EC2_USER }}/app
        docker-compose down  # Caso você esteja usando Docker
        docker-compose up -d --build  # Builda e sobe os containers
        EOF
